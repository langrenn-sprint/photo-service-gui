[project]
description = "An API for admin of sporting users"
license = "Apache-2.0"
name = "photo-service-gui"
readme = "README.md"
version = "0.1.0"
requires-python = ">=3.13"
dependencies = [
    "aiodns>=3.2.0",
    "aiohttp-middlewares>=2.4.0",
    "aiohttp>=3.10.10",
    "certifi>=2024.8.30",
    "dataclasses-json>=0.6.7",
    "gunicorn>=23.0.0",
    "motor>=3.6.0",
    "multidict>=6.1.0",
    "pyjwt>=2.9.0",
    "python-dotenv>=1.0.1",
    "aiohttp-session>=2.12.1",
    "aiohttp-jinja2>=1.6",
    "cryptography>=44.0.2",
    "google-cloud-storage>=3.4.0",
]

[tool.uv]
dev-dependencies = [
    "aiohttp-devtools>=1.1.2",
    "poethepoet>=0.29.0",
    "pyright>=1.1.386",
    "pytest-aiohttp>=1.0.5",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=5.0.0",
    "pytest-docker>=3.1.1",
    "pytest-env>=1.1.5",
    "pytest-mock>=3.14.0",
    "pytest>=8.3.3",
    "requests>=2.32.3",
    "ruff>=0.7.1",
]

[tool.poe.tasks]
fmt = "uv run ruff format"
lint = "uv run ruff check --fix"
pyright = "uv run pyright"
integration-tests = "uv run pytest --cov=photo_service_gui --cov-report=term-missing -m integration"
contract-tests = "uv run pytest -m contract"
release = [
    "lint",
    "pyright",
    "integration-tests",
    "contract-tests",
]


[tool.ruff.lint]
select = ["ALL"]
# and then manually ignore annoying ones:
ignore = [
    "ANN001",
    "ANN401", # Any should be allowed
    "ASYNC230",
    "BLE001",
    "D211",
    "D213",
    "F401",
    "FBT003",
    "G004",
    "LOG015",
    "PLR0913",
    "TRY002",
]
[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    # at least this three should be fine in tests:
    "S101", # asserts allowed in tests...
    #     "ARG",  # Unused function args -> fixtures nevertheless are functionally relevant...
    #     "FBT",  # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
]

[tool.ruff.lint.isort]
# so it knows to group first-party stuff last
known-first-party = ["photo_service_gui"]

[tool.pyright]
venvPath = "." # rye installs the venv in the current dir
venv = ".venv" #       in a folder called `.venv`
#strict = ["**/*.py"] # use 'strict' checking on all files

[tool.pytest.ini_options]
env = [
    "CONFIG=test",
    "JWT_SECRET=secret",
    "ADMIN_USERNAME=admin",
    "ADMIN_PASSWORD=password",
    "JWT_EXP_DELTA_SECONDS=60",
    "JWT_SECRET=secret",
    "DB_NAME=users_test",
    "DB_USER=admin",
    "DB_PASSWORD=admin",
    "LOGGING_LEVEL=DEBUG",
]
asyncio_mode = "auto"
markers = [
    "integration: marks tests as integration",
    "contract: marks tests as contract",
]

[tool.coverage.paths]
source = ["photo_service_gui", "*/site-packages"]

[tool.coverage.run]
branch = false
omit = ["*gunicorn_config.py", "users_adapter.py", "adapter.py"]
source = ["photo_service_gui"]

[tool.coverage.report]
fail_under = 20
show_missing = true
